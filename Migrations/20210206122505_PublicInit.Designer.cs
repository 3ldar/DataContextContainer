// <auto-generated />
using System;
using DataContextContainer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DataContextContainer.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20210206122505_PublicInit")]
    partial class PublicInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("DataContextContainer.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Brand")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("BuyBoxPrice")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string[]>("Categories")
                        .HasColumnType("text[]");

                    b.Property<bool>("Delivery")
                        .HasColumnType("boolean");

                    b.Property<bool>("InStock")
                        .HasColumnType("boolean");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("ShippingFee")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("SoldBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DataContextContainer.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataContextContainer.UserConfig", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("UserConfig");
                });

            modelBuilder.Entity("DataContextContainer.UserConfig", b =>
                {
                    b.HasOne("DataContextContainer.User", "User")
                        .WithOne("Config")
                        .HasForeignKey("DataContextContainer.UserConfig", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataContextContainer.User", b =>
                {
                    b.Navigation("Config");
                });
#pragma warning restore 612, 618
        }
    }
}
